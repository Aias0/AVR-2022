name: Build Containers

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "VMC/FlightSoftware/**"
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - "VMC/FlightSoftware/**"

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      matrix:
        # april tag module needs to be built on-device
        image: [fcm, fusion, mavp2p, mqtt, pcm, vio, status, thermal]

    steps:
      - name: Checkout Code
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v3
        with:
          # https://github.com/tj-actions/changed-files/blob/576594102a649fceaf32e0509c125662c112cb2a/README.md?plain=1#L67
          # on pull requests, only fetch latest commit, on pushes, fetch previous commit as well
          fetch-depth: ${{ github.event_name == 'pull_request' && 0 || 2 }}

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v18.6
        with:
          files: ${{ format('VMC/FlightSoftware/{0}/**', matrix.image) }}

      - name: Set up Python
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Cache Docker Layers
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ hashFiles(format('VMC/FlightSoftware/{0}/**', matrix.image)) }}
          restore-keys: |
            buildx

      - name: Set up QEMU
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          install: false

      - name: Github CR Login
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy libraries
        if: steps.changed-files.outputs.any_changed == 'true'
        run: python scripts/copy_libraries.py

      - name: Cache PX4
        if: steps.changed-files.outputs.any_changed == 'true' && matrix.image == 'fcm'
        uses: actions/cache@v3
        with:
          path: PX4/build
          key: PX4-${{ hashFiles('PX4/patches/**') }}-${{ hashFiles('PX4/bell.xml') }}

      - name: Generate custom pymavlink package
        if: steps.changed-files.outputs.any_changed == 'true' && matrix.image == 'fcm'
        run: python3 PX4/generate.py host --pymavlink

      - name: Build and push
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: VMC/FlightSoftware/${{ matrix.image }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/bellflight/vrc_${{ matrix.image }}:latest
          platforms: linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
